apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-kafka
  namespace: tms-sit
data:
  kafka_logstash_jaas.conf: |
    KafkaClient {
      org.apache.kafka.common.security.plain.PlainLoginModule required
      username="kafka"
      password="kafka-secret";
    };
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-pipline
  namespace: tms-sit
data:
  logstash.conf: |
    input {
      kafka{
        codec => json
        bootstrap_servers => "kafka-broker-1:29092"
        topics => ["tms-customer", "tms-3pl"]
        group_id => "logstash"
        sasl_mechanism => "PLAIN"
        security_protocol => "SASL_PLAINTEXT"
        sasl_jaas_config => "org.apache.kafka.common.security.plain.PlainLoginModule required username='kafka'  password='kafka-secret';"
      }
    }

    output {
      stdout {  
            codec => rubydebug  
        } 
      elasticsearch {
          hosts => ["elastic-service:9200"]
          index => "tms-event-%{+YYYY.MM.dd}"
          user => "elastic"
          password => "MyPw123"
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-config
  namespace: tms-sit
data:
  logstash.yml: |
    http.host: "0.0.0.0"
    xpack.monitoring.elasticsearch.hosts: [ "http://elastic-service:9200" ]
    xpack.monitoring.elasticsearch.username: "elastic"
    xpack.monitoring.elasticsearch.password: "MyPw123"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: logstash
  namespace: tms-sit
spec:
  serviceName: "logstash-service"
  selector:
    matchLabels:
      app: logstash-service
  template:
    metadata:
      labels:
        app: logstash-service
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: Nodepool
                operator: In
                values:
                - stateful
      tolerations:
      - effect: NoSchedule
        key: StatefulOnly
        operator: Equal
        value: "true"
      containers:
      - name: logstash
        image: docker.elastic.co/logstash/logstash:8.10.4
        command:
          - sh
          - -c
          - "logstash -f /config-dir/logstash.conf"
        env:
          - name: LS_JAVA_OPTS
            value: "-Xms512m -Xmx512m -XX:+ExitOnOutOfMemoryError"
        # livenessProbe:
        #   httpGet:
        #     path: /health
        #     port: 9411
        #     scheme: HTTP
        #   initialDelaySeconds: 30
        #   timeoutSeconds: 30
        #   periodSeconds: 60
        # readinessProbe:
        #   httpGet:
        #     path: /health
        #     port: 9411
        #     scheme: HTTP
        #   initialDelaySeconds: 30
        #   timeoutSeconds: 30
        #   periodSeconds: 60
        resources:
          limits:
            cpu: 250m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 512Mi
        volumeMounts:
          - name: logstash-pipline-file
            mountPath: /config-dir
          - name: logstash-config-file
            mountPath: /usr/share/logstash/config
          - name: logstash-kafka-file
            mountPath: /usr/share/logstash/kafka_logstash_jaas.conf
            subPath: kafka_logstash_jaas.conf
      volumes:
        - name: logstash-pipline-file
          configMap:
            name: logstash-pipline
        - name: logstash-config-file
          configMap:
            name: logstash-config
        - name: logstash-kafka-file
          configMap:
            name: logstash-kafka