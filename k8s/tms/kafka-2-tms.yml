apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-broker-2
  labels:
    helm.sh/chart: kafka-broker-0.1.0
    app.kubernetes.io/name: kafka-broker-2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "7.5.1"
    app.kubernetes.io/managed-by: Helm
  namespace: tms-sit
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kafka-broker-2
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: kafka-broker-0.1.0
        app.kubernetes.io/name: kafka-broker-2
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "7.5.1"
        app.kubernetes.io/managed-by: Helm
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: Nodepool
                operator: In
                values:
                - stateful
      tolerations:
      - effect: NoSchedule
        key: StatefulOnly
        operator: Equal
        value: "true"
      containers:
        - name: kafka-broker
          image: "confluentinc/cp-kafka:7.5.1"
          command:
          - sh
          - -c
          - "rm -rf /tmp/kraft-combined-logs/png && rm -rf /tmp/kraft-combined-logs/alerting && exec /etc/confluent/docker/run"
          
          imagePullPolicy: Always
          securityContext:
            runAsUser: 0
          envFrom:
            - configMapRef:
                name: kafka-broker-2
          livenessProbe:
            httpGet:
              path: /metrics
              port: 7072
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: /metrics
              port: 7072
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 60
          resources:
            limits:
              cpu: 500m
              memory: 2Gi
            requests:
              cpu: 50m
              memory: 1Gi
          ports:
            - containerPort: 29092
            - containerPort: 29093
            - containerPort: 7072
            - containerPort: 30882
          volumeMounts:
            - mountPath: "/tmp/kraft-combined-logs"
              name: kafka-data
            - mountPath: /usr/share/jmx_exporter
              name: kafka-jmx
            - mountPath: /usr/share/jmx_exporter/jar
              name: javaagent
      volumes:
        - name: kafka-data
          persistentVolumeClaim:
            claimName: pv-claim-tms-sit
        - name: kafka-jmx
          configMap:
            name: kafka-jmx-file
        - name: javaagent
          configMap:
            name: javaagent-file