apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-config
  labels:
    helm.sh/chart: kafka-broker-0.1.0
    app.kubernetes.io/name: kafka-broker-1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "7.5.1"
    app.kubernetes.io/managed-by: Helm
  namespace: tms-dev
data:
  kafka_server_jaas.conf: |
    KafkaServer {
      org.apache.kafka.common.security.plain.PlainLoginModule required
      user_kafka="kafka-secret"

      username="kafka"
      password="kafka-secret";
    };
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-broker-1
  labels:
    helm.sh/chart: kafka-broker-0.1.0
    app.kubernetes.io/name: kafka-broker-1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "7.5.1"
    app.kubernetes.io/managed-by: Helm
  namespace: tms-dev
data:
  KAFKA_NODE_ID: "1"
  KAFKA_LISTENERS: "CONTROLLER://:29093,LISTENER_CONTAINER_EXT://:29094,LISTENER_CONTAINER://:29092,LISTENER_EXTERNAL://:30882"
  KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
  KAFKA_HEAP_OPTS: "-Xms1280M -Xmx1280M -XX:+ExitOnOutOfMemoryError"
  KAFKA_ADVERTISED_LISTENERS: "LISTENER_CONTAINER://kafka-broker-1:29092,LISTENER_CONTAINER_EXT://kafka-broker-1.tms-dev:29094,LISTENER_EXTERNAL://localhost:30882"
  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,LISTENER_CONTAINER:SASL_PLAINTEXT,LISTENER_CONTAINER_EXT:SASL_PLAINTEXT,LISTENER_EXTERNAL:SASL_PLAINTEXT"
  KAFKA_INTER_BROKER_LISTENER_NAME: "LISTENER_CONTAINER"
  KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka-broker-1:29093"
  KAFKA_PROCESS_ROLES: "broker,controller"
  KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: "0"
  KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
  KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
  CLUSTER_ID: "VE456PBZSdIPphrGgxGtaA=="
  KAFKA_DEFAULT_REPLICATION_FACTOR: "1"
  KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
  KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"
  # KAFKA_OPTS: "-javaagent:/usr/share/jmx_exporter/jar/jmx_prometheus_javaagent-0.19.0.jar=7072:/usr/share/jmx_exporter/kafka-broker.yml"
  KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"

  KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
  KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
---
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-broker-1
  labels:
    helm.sh/chart: kafka-broker-0.1.0
    app.kubernetes.io/name: kafka-broker-1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "7.5.1"
    app.kubernetes.io/managed-by: Helm
  namespace: tms-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kafka-broker-1
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: kafka-broker-0.1.0
        app.kubernetes.io/name: kafka-broker-1
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "7.5.1"
        app.kubernetes.io/managed-by: Helm
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: Nodepool
                operator: In
                values:
                - stateful
      tolerations:
      - effect: NoSchedule
        key: StatefulOnly
        operator: Equal
        value: "true"
      containers:
        - name: kafka-broker
          image: "confluentinc/cp-kafka:7.5.1"
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: kafka-broker-1
          resources:
            limits:
              cpu: 1
              memory: 2Gi
            requests:
              cpu: 0.5
              memory: 1Gi
          ports:
            - containerPort: 29092
            - containerPort: 29093
            - containerPort: 29094
            - containerPort: 7072
            - containerPort: 30882
          volumeMounts:
            # - mountPath: "/tmp/kraft-combined-logs"
            #   name: kafka-data
            - mountPath: "/etc/kafka/kafka_server_jaas.conf"
              name: kafka-config-file
              subPath: kafka_server_jaas.conf
          #   - mountPath: /usr/share/jmx_exporter
          #     name: kafka-jmx
          #   - mountPath: /usr/share/jmx_exporter/jar
          #     name: javaagent
      volumes:
        # - name: kafka-data
        #   persistentVolumeClaim:
        #     claimName: pv-claim-tms-dev
        - name: kafka-config-file
          configMap:
            name: kafka-config
      #   - name: kafka-jmx
      #     configMap:
      #       name: kafka-jmx-file
      #   - name: javaagent
      #     configMap:
      #       name: javaagent-file