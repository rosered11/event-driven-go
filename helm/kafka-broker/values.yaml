# Note
# If add new borker please check value follow this:
# - Fullname
# - NodeId
# - NodePort
# - Service Type
# - QuarumVoters
# - External Port and Url in Kafka

namespace: "default"

replicaCount: 1

image:
  repository: confluentinc/cp-kafka
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: "kafka-broker-1"
fullnameOverride: "kafka-broker-1"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  port: 29092
  nodePort: 30882

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: kafka-data
    persistentVolumeClaim:
      claimName: kafka-broker-1
  - name: kafka-jmx
    secret:
      secretName: kafka-jmx-file
  - name: javaagent
    secret:
      secretName: javaagent-file

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: kafka-data
    mountPath: /var/lib/kafka/data
  - name: kafka-jmx
    mountPath: /usr/share/jmx_exporter
  - name: javaagent
    mountPath: /usr/share/jmx_exporter/jar


nodeSelector: {}

tolerations: []

affinity: {}

kafka:
  nodeId: "1"
  controllerPort: "29093"
  internalPort: "29092"
  externalPort: "30882"
  externalUrl: "localhost:30882"
  quarumVoters: "0@kafka-broker-0:29093,1@kafka-broker-1:29093"
  cursterId: "VE456PBZSdIPphrGgxGtaA=="
  memory: "-Xms1280M -Xmx1280M -XX:+ExitOnOutOfMemoryError"

pv:
  storage: "1Gi"
  accessMode: "ReadWriteOnce"
  storageClaimName: "kafka-broker-1"
